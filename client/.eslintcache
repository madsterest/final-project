[{"/Users/madeleineodea/Desktop/final-project/client/src/index.js":"1","/Users/madeleineodea/Desktop/final-project/client/src/App.js":"2","/Users/madeleineodea/Desktop/final-project/client/src/components/Navbar.js":"3","/Users/madeleineodea/Desktop/final-project/client/src/components/NavBarContainer.js":"4","/Users/madeleineodea/Desktop/final-project/client/src/components/Logo.js":"5","/Users/madeleineodea/Desktop/final-project/client/src/components/MenuLinks.js":"6","/Users/madeleineodea/Desktop/final-project/client/src/components/MenuItem.js":"7","/Users/madeleineodea/Desktop/final-project/client/src/pages/Home.js":"8","/Users/madeleineodea/Desktop/final-project/client/src/components/Card.js":"9","/Users/madeleineodea/Desktop/final-project/client/src/utils/theme.js":"10","/Users/madeleineodea/Desktop/final-project/client/src/utils/API.js":"11","/Users/madeleineodea/Desktop/final-project/client/src/pages/Dashboard.js":"12","/Users/madeleineodea/Desktop/final-project/client/src/pages/SignUp.js":"13","/Users/madeleineodea/Desktop/final-project/client/src/components/FormInput.js":"14","/Users/madeleineodea/Desktop/final-project/client/src/pages/Login.js":"15","/Users/madeleineodea/Desktop/final-project/client/src/utils/auth.js":"16","/Users/madeleineodea/Desktop/final-project/client/src/pages/AddRecipe.js":"17","/Users/madeleineodea/Desktop/final-project/client/src/pages/View.js":"18","/Users/madeleineodea/Desktop/final-project/client/src/components/SingleCard.js":"19","/Users/madeleineodea/Desktop/final-project/client/src/pages/EditView.js":"20","/Users/madeleineodea/Desktop/final-project/client/src/pages/Favourites.js":"21","/Users/madeleineodea/Desktop/final-project/client/src/pages/FavouritesEdit.js":"22"},{"size":315,"mtime":1627987297594,"results":"23","hashOfConfig":"24"},{"size":1180,"mtime":1628293892374,"results":"25","hashOfConfig":"24"},{"size":297,"mtime":1627791080847,"results":"26","hashOfConfig":"24"},{"size":353,"mtime":1627987605455,"results":"27","hashOfConfig":"24"},{"size":259,"mtime":1627895052715,"results":"28","hashOfConfig":"24"},{"size":945,"mtime":1628292126425,"results":"29","hashOfConfig":"24"},{"size":527,"mtime":1627989394888,"results":"30","hashOfConfig":"24"},{"size":1940,"mtime":1628224507259,"results":"31","hashOfConfig":"24"},{"size":1837,"mtime":1628330866372,"results":"32","hashOfConfig":"24"},{"size":221,"mtime":1627803087224,"results":"33","hashOfConfig":"24"},{"size":2555,"mtime":1628313084859,"results":"34","hashOfConfig":"24"},{"size":2745,"mtime":1628211447274,"results":"35","hashOfConfig":"24"},{"size":2115,"mtime":1627988295163,"results":"36","hashOfConfig":"24"},{"size":168,"mtime":1627896375141,"results":"37","hashOfConfig":"24"},{"size":1497,"mtime":1627988149621,"results":"38","hashOfConfig":"24"},{"size":843,"mtime":1628049710363,"results":"39","hashOfConfig":"24"},{"size":7933,"mtime":1628331770768,"results":"40","hashOfConfig":"24"},{"size":1304,"mtime":1628163433649,"results":"41","hashOfConfig":"24"},{"size":850,"mtime":1628163282631,"results":"42","hashOfConfig":"24"},{"size":7777,"mtime":1628334268802,"results":"43","hashOfConfig":"24"},{"size":2701,"mtime":1628330809497,"results":"44","hashOfConfig":"24"},{"size":7878,"mtime":1628331744706,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"4cjbsz",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"48"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"48"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"48"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"48"},"/Users/madeleineodea/Desktop/final-project/client/src/index.js",[],["98","99"],"/Users/madeleineodea/Desktop/final-project/client/src/App.js",[],"/Users/madeleineodea/Desktop/final-project/client/src/components/Navbar.js",[],"/Users/madeleineodea/Desktop/final-project/client/src/components/NavBarContainer.js",[],"/Users/madeleineodea/Desktop/final-project/client/src/components/Logo.js",[],"/Users/madeleineodea/Desktop/final-project/client/src/components/MenuLinks.js",[],"/Users/madeleineodea/Desktop/final-project/client/src/components/MenuItem.js",[],"/Users/madeleineodea/Desktop/final-project/client/src/pages/Home.js",["100"],"import React, { useEffect, useState } from \"react\";\n\nimport { Wrap } from \"@chakra-ui/react\";\nimport Card from \"../components/Card\";\nimport Auth from \"../utils/auth\";\nimport { getRecipes, addToFavourites } from \"../utils/API\";\n\nexport default function Home() {\n  const [recipes, setRecipes] = useState([]);\n  console.log(recipes);\n\n  useEffect(() => {\n    const getRecipeData = async () => {\n      try {\n        const response = await getRecipes();\n\n        if (!response.ok) {\n          throw new Error(\"Something went wrong\");\n        }\n        const recipeData = await response.json();\n\n        console.log(recipeData);\n        setRecipes(recipeData);\n\n        console.log(recipes);\n      } catch (err) {\n        console.error(err);\n      }\n    };\n    getRecipeData();\n  }, []);\n\n  const addFavourite = (event) => {\n    const recipeId = event.target.id;\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n    if (!token) {\n      return false;\n    }\n\n    const userId = Auth.getUserId(token);\n    console.log(recipeId, userId);\n\n    const getRecipeData = async () => {\n      try {\n        const response = await addToFavourites(recipeId, userId);\n\n        if (!response.ok) {\n          throw new Error(\"Something went wrong\");\n        }\n\n        const recipeData = await response.json();\n        console.log(recipeData);\n      } catch (err) {\n        console.error(err);\n      }\n    };\n    getRecipeData();\n  };\n\n  return (\n    <Wrap spacing=\"30px\" justify=\"center\">\n      {recipes?.map((recipe) => {\n        return (\n          <Card\n            key={recipe._id}\n            title={recipe.name}\n            prep={recipe.prepTime}\n            cook={recipe.cookTime}\n            img={recipe.img}\n            description={recipe.description}\n            rating={recipe.rating}\n            _id={recipe._id}\n            user={recipe.user.name}\n            favourite={addFavourite}\n          />\n        );\n      })}\n    </Wrap>\n  );\n}\n","/Users/madeleineodea/Desktop/final-project/client/src/components/Card.js",[],"/Users/madeleineodea/Desktop/final-project/client/src/utils/theme.js",[],"/Users/madeleineodea/Desktop/final-project/client/src/utils/API.js",[],"/Users/madeleineodea/Desktop/final-project/client/src/pages/Dashboard.js",[],"/Users/madeleineodea/Desktop/final-project/client/src/pages/SignUp.js",[],"/Users/madeleineodea/Desktop/final-project/client/src/components/FormInput.js",[],["101","102"],"/Users/madeleineodea/Desktop/final-project/client/src/pages/Login.js",[],"/Users/madeleineodea/Desktop/final-project/client/src/utils/auth.js",[],"/Users/madeleineodea/Desktop/final-project/client/src/pages/AddRecipe.js",["103"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Center,\n  Stack,\n  Input,\n  FormLabel,\n  Button,\n  Text,\n} from \"@chakra-ui/react\";\nimport Auth from \"../utils/auth\";\nimport { addNewRecipe } from \"../utils/API\";\n\nexport default function AddRecipe() {\n  const [formData, addFormData] = useState({\n    name: \"\",\n    description: \"\",\n    prepTime: \"\",\n    cookTime: \"\",\n    img: \"\",\n    ingredients: [\"\"],\n    instructions: [\"\"],\n    user: \"\",\n  });\n\n  const [formError, addFormError] = useState({\n    name: false,\n    description: false,\n    prepTime: false,\n    cookTime: false,\n    ingredients: false,\n    instructions: false,\n    img: false,\n  });\n\n  console.log(formError);\n  useEffect(() => {\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n    if (!token) {\n      return false;\n    }\n\n    const userId = Auth.getUserId(token);\n    addFormData({ ...formData, user: userId });\n    console.log(formData);\n  }, []);\n\n  const handleOnChange = (event) => {\n    const { name, value } = event.target;\n    addFormData({ ...formData, [name]: value });\n  };\n\n  const handleOnBlur = (event) => {\n    const { name, value } = event.target;\n    if (!value) {\n      addFormError({ ...formError, [name]: true });\n    } else {\n      const list = { ...formError, [name]: false };\n      addFormError(list);\n      console.log(\"No form error\");\n    }\n  };\n\n  const handleIngredientChange = (event, index) => {\n    const { name, value } = event.target;\n    const list = { ...formData };\n    list[name][index] = value;\n    addFormData(list);\n\n    console.log(formData);\n  };\n\n  const handleInstructionChange = (event, index) => {\n    const { name, value } = event.target;\n    const list = { ...formData };\n    list[name][index] = value;\n    addFormData(list);\n  };\n\n  const onPictureChange = (event) => {\n    const image = URL.createObjectURL(event.target.files[0]);\n    console.log(image);\n    const list = { ...formData, img: event.target.files[0] };\n    addFormData(list);\n  };\n\n  const handleAddClick = (event) => {\n    const buttonId = event.target.id;\n    if (buttonId === \"ingredient\") {\n      addFormData({ ...formData, ingredients: [...formData.ingredients, \"\"] });\n    } else if (buttonId === \"instruction\") {\n      addFormData({\n        ...formData,\n        instructions: [...formData.instructions, \"\"],\n      });\n    }\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    for (const element in formData) {\n      if (element === \"\") {\n        return false;\n      }\n    }\n\n    if (false) {\n      return;\n    } else {\n      const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n      if (!token) {\n        return false;\n      }\n\n      const userId = Auth.getUserId(token);\n      console.log(userId);\n      addFormData({ ...formData, user: userId });\n\n      try {\n        console.log(formData);\n        const response = await addNewRecipe(formData, token);\n\n        if (!response.ok) {\n          throw new Error(\"Unable to finish request\");\n        }\n        const newRecipe = await response.json();\n\n        console.log(newRecipe);\n      } catch (err) {\n        console.error(err);\n      }\n\n      console.log(formData);\n      addFormData({\n        name: \"\",\n        description: \"\",\n        prepTime: \"\",\n        cookTime: \"\",\n        ingredients: [\"\"],\n        instructions: [\"\"],\n        img: \"\",\n        user: \"\",\n      });\n\n      addFormError({\n        name: false,\n        description: false,\n        prepTime: false,\n        cookTime: false,\n        ingredients: false,\n        instructions: false,\n        img: false,\n      });\n\n      window.location.assign(\"/dashboard\");\n    }\n  };\n\n  return (\n    <>\n      <form encType=\"multipart/form-data\">\n        <Center mb=\"6\" fontSize=\"20px\">\n          What are you cooking for us today?\n        </Center>\n        <Stack w=\"500px\" align=\"center\" mx=\"auto\" mb=\"20\">\n          <FormLabel>Dish Name:</FormLabel>\n          <Input\n            name=\"name\"\n            value={formData.name}\n            onChange={handleOnChange}\n            placeholder=\"Wine Cream Chicken\"\n            onBlur={handleOnBlur}\n          />\n          {formError.name === true && (\n            <Text color=\"#008080\">Please input a name</Text>\n          )}\n\n          <FormLabel>Description:</FormLabel>\n          <Input\n            name=\"description\"\n            value={formData.description}\n            onChange={handleOnChange}\n            placeholder=\"Creamy chicken bake covered in breadcrumbs. Perfect for a holiday feast or a cozy night in\"\n            onBlur={handleOnBlur}\n          />\n          {formError.description === true && (\n            <Text color=\"#008080\">Please input a description</Text>\n          )}\n          <FormLabel>Prep Time:</FormLabel>\n          <Input\n            name=\"prepTime\"\n            value={formData.prepTime}\n            onChange={handleOnChange}\n            placeholder=\"20 Mins\"\n            onBlur={handleOnBlur}\n          />\n          {formError.prepTime === true && (\n            <Text color=\"#008080\">Please input a preparation time</Text>\n          )}\n          <FormLabel>Cook Time:</FormLabel>\n          <Input\n            name=\"cookTime\"\n            value={formData.cookTime}\n            onChange={handleOnChange}\n            placeholder=\"1 Hr\"\n            onBlur={handleOnBlur}\n          />\n          {formError.cookTime === true && (\n            <Text color=\"#008080\">Please input a Cook time</Text>\n          )}\n          <FormLabel>Ingredients:</FormLabel>\n          {formData.ingredients.map((ingredient, i) => {\n            return (\n              <Input\n                key={i}\n                name=\"ingredients\"\n                value={ingredient}\n                onChange={(e) => handleIngredientChange(e, i)}\n                placeholder=\"200g Chicken Breast\"\n                onBlur={(e) => handleOnBlur(e)}\n              />\n            );\n          })}\n          {formError.ingredients === true ? (\n            <>\n              <Button id=\"ingredient\" size=\"sm\" bg=\" #D991EE\" align=\"center\">\n                Add Ingredient\n              </Button>\n\n              <Text color=\"#008080\">Please input ingredients</Text>\n            </>\n          ) : (\n            <Button\n              id=\"ingredient\"\n              onClick={handleAddClick}\n              size=\"sm\"\n              bg=\" #D991EE\"\n              align=\"center\"\n            >\n              Add Ingredient\n            </Button>\n          )}\n\n          <FormLabel>Instructions:</FormLabel>\n          {formData.instructions.map((instruction, i) => {\n            return (\n              <Input\n                key={i}\n                name=\"instructions\"\n                value={instruction}\n                onChange={(e) => handleInstructionChange(e, i)}\n                placeholder=\"Preheat Oven to 250 degrees\"\n                onBlur={(e) => handleOnBlur(e)}\n              />\n            );\n          })}\n          {formError.instructions === true ? (\n            <>\n              <Button id=\"instruction\" size=\"sm\" bg=\" #D991EE\" align=\"center\">\n                Add Step\n              </Button>\n\n              <Text color=\"#008080\">Please input instructions</Text>\n            </>\n          ) : (\n            <Button\n              id=\"instruction\"\n              onClick={handleAddClick}\n              size=\"sm\"\n              bg=\" #D991EE\"\n              align=\"center\"\n            >\n              Add Step\n            </Button>\n          )}\n\n          <FormLabel>\n            *Warning* This cannot be changed later, so choose wisely!\n          </FormLabel>\n          <Input\n            name=\"img\"\n            onChange={onPictureChange}\n            type=\"file\"\n            accept=\"img/x-png\"\n          />\n\n          <Button\n            onClick={(e) => handleFormSubmit(e)}\n            size=\"md\"\n            bg=\" #D991EE\"\n            align=\"center\"\n          >\n            Create Recipe!\n          </Button>\n        </Stack>\n      </form>\n    </>\n  );\n}\n","/Users/madeleineodea/Desktop/final-project/client/src/pages/View.js",["104","105","106","107","108"],"import React, { useEffect, useState, useLayoutEffect } from \"react\";\nimport { VStack, Image, Text } from \"@chakra-ui/react\";\nimport { getIndividualRecipe } from \"../utils/API\";\nimport SingleCard from \"../components/SingleCard\";\n\nexport default function View(props) {\n  const [recipes, setRecipes] = useState({\n    name: \"\",\n    description: \"\",\n    prepTime: \"\",\n    cookTime: \"\",\n    ingredients: [\"\"],\n    instructions: [\"\"],\n    img: \"\",\n    user: \"\",\n  });\n  console.log(recipes);\n  console.log(recipes.name);\n\n  useEffect(() => {\n    const getRecipeData = async () => {\n      const recipeId = props.match.params.id;\n\n      console.log(recipeId);\n      try {\n        const response = await getIndividualRecipe(recipeId);\n\n        if (!response.ok) {\n          throw new Error(\"Something went wrong\");\n        }\n        const recipeData = await response.json();\n\n        setRecipes(recipeData[0]);\n      } catch (err) {\n        console.error(err);\n      }\n    };\n    getRecipeData();\n  }, []);\n\n  return (\n    <SingleCard\n      name={recipes.name}\n      prepTime={recipes.prepTime}\n      cookTime={recipes.cookTime}\n      ingredients={recipes.ingredients}\n      instructions={recipes.instructions}\n      img={recipes.img}\n      desciption={recipes.description}\n      user={recipes.user}\n    />\n  );\n}\n","/Users/madeleineodea/Desktop/final-project/client/src/components/SingleCard.js",["109"],"import React from \"react\";\nimport { VStack, Text, Image, Button } from \"@chakra-ui/react\";\n\nexport default function SingleCard(props) {\n  return (\n    <VStack>\n      <Text>{props.name}</Text>\n      <Text>{props.description}</Text>\n      <Image\n        src={props.img}\n        mx=\"auto\"\n        objectFit=\"cover\"\n        boxSize=\"400px\"\n        alt=\"Recipe Photo\"\n      />\n      <Text>Prep Time: {props.prepTime}</Text>\n      <Text>Cook Time: {props.cookTime}</Text>\n      <Text>Ingredients:</Text>\n      {props.ingredients.map((ingredient, index) => {\n        return <Text key={index}>{ingredient}</Text>;\n      })}\n      <Text>Instructions:</Text>\n      {props.instructions.map((instruction, index) => {\n        return (\n          <Text key={index}>\n            {index + 1}. {instruction}\n          </Text>\n        );\n      })}\n    </VStack>\n  );\n}\n","/Users/madeleineodea/Desktop/final-project/client/src/pages/EditView.js",["110"],"/Users/madeleineodea/Desktop/final-project/client/src/pages/Favourites.js",["111","112"],"import React, { useEffect, useState } from \"react\";\nimport { Wrap, Center, Button, propNames } from \"@chakra-ui/react\";\nimport Card from \"../components/Card\";\nimport Auth from \"../utils/auth\";\nimport { getFavourites, deleteFavourite } from \"../utils/API\";\n\nexport default function Favourites() {\n  const login = localStorage.getItem(\"id_token\");\n  const [recipes, setRecipes] = useState([]);\n  const [user, setUser] = useState();\n  console.log(user);\n\n  console.log(recipes);\n  useEffect(() => {\n    const getRecipes = async () => {\n      try {\n        const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n        if (!token) {\n          return false;\n        }\n        const user = Auth.getUserId(token);\n        setUser(user);\n\n        console.log(user);\n        const response = await getFavourites(user);\n\n        if (!response.ok) {\n          throw new Error(\"Unable to finish request\");\n        }\n\n        const userData = await response.json();\n        console.log(userData);\n\n        const recipeData = userData[0].favourites;\n\n        setRecipes(recipeData);\n      } catch (err) {\n        console.error(err);\n      }\n    };\n    getRecipes();\n  }, []);\n\n  if (!login) {\n    window.location.assign(\"/login\");\n  }\n\n  const handleEditClick = (event) => {\n    const recipeId = event.target.id;\n    console.log(recipeId);\n    window.location.assign(`/edit/favs/${recipeId}`);\n  };\n\n  const handleDelete = (event) => {\n    const recipeId = event.target.id;\n    console.log(recipeId, user);\n\n    const removeRecipe = async () => {\n      try {\n        const response = await deleteFavourite(recipeId, user);\n\n        if (!response.ok) {\n          throw new Error(\"something went wrong\");\n        }\n        const userData = await response.json();\n        console.log(userData);\n\n        setRecipes(userData.favourites);\n      } catch (err) {\n        console.error(err);\n      }\n    };\n    removeRecipe();\n  };\n\n  return (\n    <>\n      <Center mb=\"6\" fontSize=\"20px\">\n        Favourites\n      </Center>\n\n      <Wrap spacing=\"30px\" justify=\"center\">\n        {recipes?.map((recipe, index) => {\n          return (\n            <Card\n              key={recipe._id}\n              _id={recipe._id}\n              title={recipe.name}\n              prep={recipe.prepTime}\n              cook={recipe.cookTime}\n              ingredients={recipe.ingredients}\n              instructions={recipe.instructions}\n              description={recipe.description}\n              rating={recipe.rating}\n              img={recipe.img}\n              index={index + 1}\n              onIndexEdit={handleEditClick}\n              onDelete={handleDelete}\n            ></Card>\n          );\n        })}\n      </Wrap>\n    </>\n  );\n}\n","/Users/madeleineodea/Desktop/final-project/client/src/pages/FavouritesEdit.js",["113","114"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Center,\n  Stack,\n  Input,\n  FormLabel,\n  Button,\n  Text,\n} from \"@chakra-ui/react\";\nimport Auth from \"../utils/auth\";\nimport { editFavourites, getFavourites } from \"../utils/API\";\n\nexport default function FavouritesEdit(props) {\n  const [formData, addFormData] = useState({\n    name: \"\",\n    description: \"\",\n    prepTime: \"\",\n    cookTime: \"\",\n    ingredients: [\"\"],\n    instructions: [\"\"],\n    user: \"\",\n  });\n  const [user, setUser] = useState();\n\n  const [formError, addFormError] = useState({\n    name: false,\n    description: false,\n    prepTime: false,\n    cookTime: false,\n    ingredients: false,\n    instructions: false,\n    img: false,\n  });\n\n  console.log(formError);\n  console.log(formData);\n\n  useEffect(() => {\n    const getRecipeData = async () => {\n      const recipeIndex = props.match.params.id;\n\n      try {\n        const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n        if (!token) {\n          return false;\n        }\n        const user = Auth.getUserId(token);\n        setUser(user);\n\n        const response = await getFavourites(user);\n\n        if (!response.ok) {\n          throw new Error(\"Something went wrong\");\n        }\n        const favouritesData = await response.json();\n\n        console.log(favouritesData);\n\n        const chosenRecipe = favouritesData[0].favourites[recipeIndex - 1];\n        addFormData(chosenRecipe);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    getRecipeData();\n  }, []);\n\n  const handleOnChange = (event) => {\n    const { name, value } = event.target;\n    addFormData({ ...formData, [name]: value });\n  };\n\n  const handleOnBlur = (event) => {\n    const { name, value } = event.target;\n    if (!value) {\n      addFormError({ ...formError, [name]: true });\n    } else {\n      const list = { ...formError, [name]: false };\n      addFormError(list);\n      console.log(\"No form error\");\n    }\n  };\n\n  const handleIngredientChange = (event, index) => {\n    const { name, value } = event.target;\n    const list = { ...formData };\n    list[name][index] = value;\n    addFormData(list);\n\n    console.log(formData);\n  };\n\n  const handleInstructionChange = (event, index) => {\n    const { name, value } = event.target;\n    const list = { ...formData };\n    list[name][index] = value;\n    addFormData(list);\n\n    console.log(formData);\n  };\n\n  const handleAddClick = (event) => {\n    const buttonId = event.target.id;\n    if (buttonId === \"ingredient\") {\n      addFormData({ ...formData, ingredients: [...formData.ingredients, \"\"] });\n    } else if (buttonId === \"instruction\") {\n      addFormData({\n        ...formData,\n        instructions: [...formData.instructions, \"\"],\n      });\n    }\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    for (const element in formData) {\n      if (element === \"\") {\n        return false;\n      }\n    }\n\n    if (false) {\n      return;\n    } else {\n      const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n      try {\n        console.log(formData);\n\n        console.log(user);\n        const response = await editFavourites(formData, user);\n\n        if (!response.ok) {\n          throw new Error(\"Unable to finish request\");\n        }\n        const newRecipe = await response.json();\n\n        console.log(newRecipe);\n      } catch (err) {\n        console.error(err);\n      }\n\n      addFormData({\n        name: \"\",\n        description: \"\",\n        prepTime: \"\",\n        cookTime: \"\",\n        ingredients: [\"\"],\n        instructions: [\"\"],\n        img: \"\",\n        user: \"\",\n      });\n\n      addFormError({\n        name: false,\n        description: false,\n        prepTime: false,\n        cookTime: false,\n        ingredients: false,\n        instructions: false,\n        img: false,\n      });\n\n      window.location.assign(\"/favs\");\n    }\n  };\n\n  return (\n    <>\n      <form encType=\"multipart/form-data\">\n        <Center mb=\"6\" fontSize=\"20px\">\n          What are you cooking for us today?\n        </Center>\n        <Stack w=\"500px\" align=\"center\" mx=\"auto\" mb=\"20\">\n          <FormLabel>Dish Name:</FormLabel>\n          <Input\n            name=\"name\"\n            value={formData.name}\n            onChange={handleOnChange}\n            placeholder=\"Wine Cream Chicken\"\n            onBlur={handleOnBlur}\n          />\n          {formError.name === true && (\n            <Text color=\"#008080\">Please input a name</Text>\n          )}\n          <FormLabel>Description:</FormLabel>\n          <Input\n            name=\"description\"\n            value={formData.description}\n            onChange={handleOnChange}\n            placeholder=\"Creamy chicken bake covered in breadcrumbs. Perfect for a holiday feast or a cozy night in\"\n            onBlur={handleOnBlur}\n          />\n          {formError.description === true && (\n            <Text color=\"#008080\">Please input a description</Text>\n          )}\n          <FormLabel>Prep Time:</FormLabel>\n          <Input\n            name=\"prepTime\"\n            value={formData.prepTime}\n            onChange={handleOnChange}\n            placeholder=\"20 Mins\"\n            onBlur={handleOnBlur}\n          />\n          {formError.prepTime === true && (\n            <Text color=\"#008080\">Please input a preparation time</Text>\n          )}\n          <FormLabel>Cook Time:</FormLabel>\n          <Input\n            name=\"cookTime\"\n            value={formData.cookTime}\n            onChange={handleOnChange}\n            placeholder=\"1 Hr\"\n            onBlur={handleOnBlur}\n          />\n          {formError.cookTime === true && (\n            <Text color=\"#008080\">Please input a Cook time</Text>\n          )}\n          <FormLabel>Ingredients:</FormLabel>\n          {formData.ingredients.map((ingredient, i) => {\n            return (\n              <Input\n                key={i}\n                name=\"ingredients\"\n                value={ingredient}\n                onChange={(e) => handleIngredientChange(e, i)}\n                placeholder=\"200g Chicken Breast\"\n                onBlur={(e) => handleOnBlur(e)}\n              />\n            );\n          })}\n          {formError.ingredients === true ? (\n            <>\n              <Button id=\"ingredient\" size=\"sm\" bg=\" #D991EE\" align=\"center\">\n                Add Ingredient\n              </Button>\n\n              <Text color=\"#008080\">Please input ingredients</Text>\n            </>\n          ) : (\n            <Button\n              id=\"ingredient\"\n              onClick={handleAddClick}\n              size=\"sm\"\n              bg=\" #D991EE\"\n              align=\"center\"\n            >\n              Add Ingredient\n            </Button>\n          )}\n          <FormLabel>Instructions:</FormLabel>\n          {formData.instructions.map((instruction, i) => {\n            return (\n              <Input\n                key={i}\n                name=\"instructions\"\n                value={instruction}\n                onChange={(e) => handleInstructionChange(e, i)}\n                placeholder=\"Preheat Oven to 250 degrees\"\n                onBlur={(e) => handleOnBlur(e)}\n              />\n            );\n          })}\n          {formError.instructions === true ? (\n            <>\n              <Button id=\"instruction\" size=\"sm\" bg=\" #D991EE\" align=\"center\">\n                Add Step\n              </Button>\n\n              <Text color=\"#008080\">Please input instructions</Text>\n            </>\n          ) : (\n            <Button\n              id=\"instruction\"\n              onClick={handleAddClick}\n              size=\"sm\"\n              bg=\" #D991EE\"\n              align=\"center\"\n            >\n              Add Step\n            </Button>\n          )}\n\n          <Button\n            onClick={(e) => handleFormSubmit(e)}\n            size=\"md\"\n            bg=\" #D991EE\"\n            align=\"center\"\n          >\n            Create Recipe!\n          </Button>\n        </Stack>\n      </form>\n    </>\n  );\n}\n",{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","severity":1,"message":"120","line":31,"column":6,"nodeType":"121","endLine":31,"endColumn":8,"suggestions":"122"},{"ruleId":"115","replacedBy":"123"},{"ruleId":"117","replacedBy":"124"},{"ruleId":"119","severity":1,"message":"125","line":46,"column":6,"nodeType":"121","endLine":46,"endColumn":8,"suggestions":"126"},{"ruleId":"127","severity":1,"message":"128","line":1,"column":38,"nodeType":"129","messageId":"130","endLine":1,"endColumn":53},{"ruleId":"127","severity":1,"message":"131","line":2,"column":10,"nodeType":"129","messageId":"130","endLine":2,"endColumn":16},{"ruleId":"127","severity":1,"message":"132","line":2,"column":18,"nodeType":"129","messageId":"130","endLine":2,"endColumn":23},{"ruleId":"127","severity":1,"message":"133","line":2,"column":25,"nodeType":"129","messageId":"130","endLine":2,"endColumn":29},{"ruleId":"119","severity":1,"message":"134","line":39,"column":6,"nodeType":"121","endLine":39,"endColumn":8,"suggestions":"135"},{"ruleId":"127","severity":1,"message":"136","line":2,"column":31,"nodeType":"129","messageId":"130","endLine":2,"endColumn":37},{"ruleId":"119","severity":1,"message":"134","line":61,"column":6,"nodeType":"121","endLine":61,"endColumn":8,"suggestions":"137"},{"ruleId":"127","severity":1,"message":"136","line":2,"column":24,"nodeType":"129","messageId":"130","endLine":2,"endColumn":30},{"ruleId":"127","severity":1,"message":"138","line":2,"column":32,"nodeType":"129","messageId":"130","endLine":2,"endColumn":41},{"ruleId":"119","severity":1,"message":"134","line":67,"column":6,"nodeType":"121","endLine":67,"endColumn":8,"suggestions":"139"},{"ruleId":"127","severity":1,"message":"140","line":127,"column":13,"nodeType":"129","messageId":"130","endLine":127,"endColumn":18},"no-native-reassign",["141"],"no-negated-in-lhs",["142"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'recipes'. Either include it or remove the dependency array.","ArrayExpression",["143"],["141"],["142"],"React Hook useEffect has a missing dependency: 'formData'. Either include it or remove the dependency array. You can also do a functional update 'addFormData(f => ...)' if you only need 'formData' in the 'addFormData' call.",["144"],"no-unused-vars","'useLayoutEffect' is defined but never used.","Identifier","unusedVar","'VStack' is defined but never used.","'Image' is defined but never used.","'Text' is defined but never used.","React Hook useEffect has a missing dependency: 'props.match.params.id'. Either include it or remove the dependency array.",["145"],"'Button' is defined but never used.",["146"],"'propNames' is defined but never used.",["147"],"'token' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"148","fix":"149"},{"desc":"150","fix":"151"},{"desc":"152","fix":"153"},{"desc":"152","fix":"154"},{"desc":"152","fix":"155"},"Update the dependencies array to be: [recipes]",{"range":"156","text":"157"},"Update the dependencies array to be: [formData]",{"range":"158","text":"159"},"Update the dependencies array to be: [props.match.params.id]",{"range":"160","text":"161"},{"range":"162","text":"161"},{"range":"163","text":"161"},[777,779],"[recipes]",[938,940],"[formData]",[992,994],"[props.match.params.id]",[1320,1322],[1514,1516]]