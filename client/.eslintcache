[{"/Users/madeleineodea/Desktop/final-project/client/src/index.js":"1","/Users/madeleineodea/Desktop/final-project/client/src/App.js":"2","/Users/madeleineodea/Desktop/final-project/client/src/components/Navbar.js":"3","/Users/madeleineodea/Desktop/final-project/client/src/components/NavBarContainer.js":"4","/Users/madeleineodea/Desktop/final-project/client/src/components/Logo.js":"5","/Users/madeleineodea/Desktop/final-project/client/src/components/MenuLinks.js":"6","/Users/madeleineodea/Desktop/final-project/client/src/components/MenuItem.js":"7","/Users/madeleineodea/Desktop/final-project/client/src/pages/Home.js":"8","/Users/madeleineodea/Desktop/final-project/client/src/components/Card.js":"9","/Users/madeleineodea/Desktop/final-project/client/src/utils/theme.js":"10","/Users/madeleineodea/Desktop/final-project/client/src/utils/API.js":"11","/Users/madeleineodea/Desktop/final-project/client/src/pages/Dashboard.js":"12","/Users/madeleineodea/Desktop/final-project/client/src/pages/SignUp.js":"13","/Users/madeleineodea/Desktop/final-project/client/src/components/FormInput.js":"14","/Users/madeleineodea/Desktop/final-project/client/src/pages/Login.js":"15","/Users/madeleineodea/Desktop/final-project/client/src/utils/auth.js":"16","/Users/madeleineodea/Desktop/final-project/client/src/pages/AddRecipe.js":"17","/Users/madeleineodea/Desktop/final-project/client/src/pages/View.js":"18","/Users/madeleineodea/Desktop/final-project/client/src/components/SingleCard.js":"19","/Users/madeleineodea/Desktop/final-project/client/src/pages/EditView.js":"20","/Users/madeleineodea/Desktop/final-project/client/src/pages/Favourites.js":"21","/Users/madeleineodea/Desktop/final-project/client/src/pages/FavouritesEdit.js":"22","/Users/madeleineodea/Desktop/final-project/client/src/components/Form.js":"23"},{"size":315,"mtime":1627987297594,"results":"24","hashOfConfig":"25"},{"size":1180,"mtime":1628420905039,"results":"26","hashOfConfig":"25"},{"size":297,"mtime":1627791080847,"results":"27","hashOfConfig":"25"},{"size":353,"mtime":1628393545622,"results":"28","hashOfConfig":"25"},{"size":259,"mtime":1627895052715,"results":"29","hashOfConfig":"25"},{"size":945,"mtime":1628395380969,"results":"30","hashOfConfig":"25"},{"size":526,"mtime":1628395363350,"results":"31","hashOfConfig":"25"},{"size":2101,"mtime":1628409203590,"results":"32","hashOfConfig":"25"},{"size":3275,"mtime":1628421744213,"results":"33","hashOfConfig":"25"},{"size":221,"mtime":1627803087224,"results":"34","hashOfConfig":"25"},{"size":3080,"mtime":1628411778366,"results":"35","hashOfConfig":"25"},{"size":3120,"mtime":1628414595717,"results":"36","hashOfConfig":"25"},{"size":3469,"mtime":1628399025347,"results":"37","hashOfConfig":"25"},{"size":168,"mtime":1627896375141,"results":"38","hashOfConfig":"25"},{"size":2128,"mtime":1628398991596,"results":"39","hashOfConfig":"25"},{"size":1032,"mtime":1628413493026,"results":"40","hashOfConfig":"25"},{"size":3941,"mtime":1628420895931,"results":"41","hashOfConfig":"25"},{"size":2742,"mtime":1628421992175,"results":"42","hashOfConfig":"25"},{"size":2178,"mtime":1628422383190,"results":"43","hashOfConfig":"25"},{"size":3856,"mtime":1628421157609,"results":"44","hashOfConfig":"25"},{"size":2879,"mtime":1628414611595,"results":"45","hashOfConfig":"25"},{"size":4134,"mtime":1628421213220,"results":"46","hashOfConfig":"25"},{"size":4373,"mtime":1628421028475,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"4cjbsz",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"50"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"50"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"50"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"50"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"/Users/madeleineodea/Desktop/final-project/client/src/index.js",[],["104","105"],"/Users/madeleineodea/Desktop/final-project/client/src/App.js",[],"/Users/madeleineodea/Desktop/final-project/client/src/components/Navbar.js",[],"/Users/madeleineodea/Desktop/final-project/client/src/components/NavBarContainer.js",[],"/Users/madeleineodea/Desktop/final-project/client/src/components/Logo.js",[],"/Users/madeleineodea/Desktop/final-project/client/src/components/MenuLinks.js",[],"/Users/madeleineodea/Desktop/final-project/client/src/components/MenuItem.js",[],"/Users/madeleineodea/Desktop/final-project/client/src/pages/Home.js",["106"],"import React, { useEffect, useState } from \"react\";\n\nimport { Wrap, Center } from \"@chakra-ui/react\";\nimport Card from \"../components/Card\";\nimport Auth from \"../utils/auth\";\nimport { getRecipes, addToFavourites } from \"../utils/API\";\n\nexport default function Home() {\n  const [recipes, setRecipes] = useState([]);\n\n  console.log(recipes);\n\n  useEffect(() => {\n    const getRecipeData = async () => {\n      try {\n        const response = await getRecipes();\n\n        if (!response.ok) {\n          throw new Error(\"Something went wrong\");\n        }\n        const recipeData = await response.json();\n\n        console.log(recipeData);\n        setRecipes(recipeData);\n\n        console.log(recipes);\n      } catch (err) {\n        console.error(err);\n      }\n    };\n    getRecipeData();\n  }, []);\n\n  const addFavourite = (event) => {\n    const recipeId = event.target.id;\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n    if (!token) {\n      return false;\n    }\n\n    const userId = Auth.getUserId(token);\n    console.log(recipeId, userId);\n\n    const getRecipeData = async () => {\n      try {\n        const response = await addToFavourites(recipeId, userId, token);\n\n        if (!response.ok) {\n          throw new Error(\"Something went wrong\");\n        }\n\n        const recipeData = await response.json();\n        console.log(recipeData);\n      } catch (err) {\n        console.error(err);\n      }\n    };\n    getRecipeData();\n  };\n\n  return (\n    <>\n      <Center color=\"#009797\" mb=\"6\" fontSize=\"2xl\">\n        See what's cookin!\n      </Center>\n      <Wrap spacing=\"20\" justify=\"center\">\n        {recipes?.map((recipe) => {\n          return (\n            <Card\n              key={recipe._id}\n              title={recipe.name}\n              prep={recipe.prepTime}\n              cook={recipe.cookTime}\n              img={recipe.img}\n              description={recipe.description}\n              rating={recipe.rating}\n              _id={recipe._id}\n              user={recipe.user.name}\n              favourite={addFavourite}\n            />\n          );\n        })}\n      </Wrap>\n    </>\n  );\n}\n","/Users/madeleineodea/Desktop/final-project/client/src/components/Card.js",["107","108","109","110","111","112"],"import React from \"react\";\n\nimport {\n  WrapItem,\n  Text,\n  Image,\n  LinkOverlay,\n  LinkBox,\n  Center,\n  Button,\n  Container,\n} from \"@chakra-ui/react\";\n\nexport default function Card(props) {\n  return (\n    <WrapItem\n      key={props._id}\n      w=\"300px\"\n      h=\"500px\"\n      p=\"5\"\n      border=\"1px\"\n      borderRadius=\"30\"\n      borderColor=\"#80c0c0\"\n      bg=\"#99d5d5\"\n      _hover={{\n        border: \"2px\",\n        borderColor: \"#dfb3f2\",\n        textDecoration: \"none\",\n      }}\n    >\n      <LinkBox mx=\"auto\">\n        <Image\n          src={props.img}\n          objectFit=\"cover\"\n          boxSize=\"200px\"\n          alt=\"Recipe Photo\"\n          align=\"center\"\n          mx=\"auto\"\n        />\n        <Container height=\"210px\">\n          <Center>\n            <Text fontSize=\"20px\" fontWeight=\"bold\" color=\"#ffffff\">\n              <LinkOverlay\n                _hover={{\n                  color: \"#ffffff\",\n                  textDecoration: \"none\",\n                }}\n                href={props._id}\n              >\n                {props.title}\n              </LinkOverlay>\n            </Text>\n          </Center>\n          <Center>\n            {props.user && (\n              <Text color=\"#009797\" fontSize=\"md\" mb=\"3\">\n                Created by {props.user}\n              </Text>\n            )}\n          </Center>\n\n          <Text color=\"#ffffff\">Prep Time: {props.prep}</Text>\n          <Text mb=\"1\" color=\"#ffffff\">\n            Cook Time: {props.cook}\n          </Text>\n          <Text color=\"#ffffff\">{props.description}</Text>\n        </Container>\n        <Container align=\"center\">\n          {props.onEdit && (\n            <Button\n              borderRadius=\"15\"\n              bg=\"#ffffff\"\n              onClick={props.favourite}\n              id={props._id}\n              fontWeight=\"normal\"\n              _hover={{ bg: \"#f0f8fe\" }}\n              onClick={props.onEdit}\n              id={props._id}\n              p=\"5\"\n            >\n              Edit\n            </Button>\n          )}\n          {props.onIndexEdit && (\n            <Button\n              borderRadius=\"15\"\n              bg=\"#ffffff\"\n              onClick={props.favourite}\n              id={props._id}\n              fontWeight=\"normal\"\n              _hover={{ bg: \"#f0f8fe\" }}\n              onClick={props.onIndexEdit}\n              id={props.index}\n            >\n              Edit\n            </Button>\n          )}\n\n          {props.onDelete && (\n            <Button\n              borderRadius=\"15\"\n              bg=\"#ffffff\"\n              onClick={props.favourite}\n              id={props._id}\n              m=\"1\"\n              fontWeight=\"normal\"\n              _hover={{ bg: \"#f0f8fe\" }}\n              onClick={props.onDelete}\n              id={props._id}\n            >\n              Delete\n            </Button>\n          )}\n          {props.favourite && (\n            <Center>\n              <Button\n                borderRadius=\"15\"\n                bg=\"#ffffff\"\n                onClick={props.favourite}\n                id={props._id}\n                fontWeight=\"normal\"\n                _hover={{ bg: \"#f0f8fe\" }}\n              >\n                Add Copy to Favourites\n              </Button>\n            </Center>\n          )}\n        </Container>\n      </LinkBox>\n    </WrapItem>\n  );\n}\n","/Users/madeleineodea/Desktop/final-project/client/src/utils/theme.js",[],"/Users/madeleineodea/Desktop/final-project/client/src/utils/API.js",[],"/Users/madeleineodea/Desktop/final-project/client/src/pages/Dashboard.js",["113"],"import React, { useEffect, useState } from \"react\";\nimport { Wrap, Center, Button } from \"@chakra-ui/react\";\nimport Card from \"../components/Card\";\nimport Auth from \"../utils/auth\";\nimport { getUserRecipes, deleteRecipe } from \"../utils/API\";\n\nexport default function Dashboard() {\n  const [hasToken, setHasToken] = useState(true);\n  const [recipes, setRecipes] = useState([]);\n  const [user, setUser] = useState();\n\n  useEffect(() => {\n    const getRecipes = async () => {\n      try {\n        const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n        if (!token) {\n          setHasToken(false);\n          return false;\n        }\n        const userId = Auth.getUserId(token);\n        setUser(userId);\n        console.log(user);\n\n        const response = await getUserRecipes(token, userId);\n\n        if (!response.ok) {\n          throw new Error(\"Unable to finish request\");\n        }\n\n        const userData = await response.json();\n        console.log(userData);\n\n        const recipeData = userData[0].recipes;\n\n        setRecipes(recipeData);\n      } catch (err) {\n        console.error(err);\n      }\n    };\n    getRecipes();\n  }, []);\n\n  if (!hasToken) {\n    window.location.assign(\"/login\");\n  }\n\n  const handleEditClick = (event) => {\n    const recipeId = event.target.id;\n    window.location.assign(`/edit/${recipeId}`);\n  };\n\n  const handleDelete = (event) => {\n    const recipeId = event.target.id;\n    console.log(recipeId, user);\n\n    const removeRecipe = async () => {\n      try {\n        const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n        if (!token) {\n          return false;\n        }\n        const response = await deleteRecipe(recipeId, user, token);\n\n        if (!response.ok) {\n          throw new Error(\"something went wrong\");\n        }\n        const userData = await response.json();\n\n        console.log(userData);\n\n        setRecipes(userData.recipes);\n      } catch (err) {\n        console.error(err);\n      }\n    };\n    removeRecipe();\n  };\n\n  const handleOnClick = () => {\n    window.location.assign(\"/new-recipe\");\n  };\n\n  return (\n    <>\n      <Center mb=\"6\" fontSize=\"2xl\" color=\"#009797\">\n        Your Recipies\n      </Center>\n      <Center>\n        <Button\n          onClick={handleOnClick}\n          bg=\" #dfb3f2\"\n          mx=\"auto\"\n          mb=\"10\"\n          fontWeight=\"light\"\n          fontSize=\"lg\"\n          _hover={{ bg: \"#f0f8fe\" }}\n        >\n          Add a New Recipe\n        </Button>\n      </Center>\n\n      <Wrap spacing=\"30px\" justify=\"center\">\n        {recipes?.map((recipe) => {\n          return (\n            <Card\n              key={recipe._id}\n              title={recipe.name}\n              prep={recipe.prepTime}\n              cook={recipe.cookTime}\n              description={recipe.description}\n              ingredients={recipe.ingredients}\n              instructions={recipe.instructions}\n              rating={recipe.rating}\n              _id={recipe._id}\n              img={recipe.img}\n              onEdit={handleEditClick}\n              onDelete={handleDelete}\n            ></Card>\n          );\n        })}\n      </Wrap>\n    </>\n  );\n}\n","/Users/madeleineodea/Desktop/final-project/client/src/pages/SignUp.js",[],"/Users/madeleineodea/Desktop/final-project/client/src/components/FormInput.js",[],["114","115"],"/Users/madeleineodea/Desktop/final-project/client/src/pages/Login.js",["116","117"],"import React, { useState } from \"react\";\nimport { Center, Stack, Input, Button, Text } from \"@chakra-ui/react\";\nimport { userLogin } from \"../utils/API\";\nimport Auth from \"../utils/auth\";\n\nexport default function Login() {\n  const [userData, setUserData] = useState({ username: \"\", password: \"\" });\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setUserData({ ...userData, [name]: value });\n  };\n\n  const [formError, addFormError] = useState({\n    username: false,\n    password: false,\n  });\n\n  const handleOnBlur = (event) => {\n    const { name, value } = event.target;\n    if (!value) {\n      addFormError({ ...formError, [name]: true });\n    } else {\n      addFormError({ ...formError, [name]: false });\n    }\n  };\n\n  const validate = (event) => {\n    for (const element in userData) {\n      if (userData[element] === \"\") {\n        return;\n      }\n    }\n    handleFormSubmit(event);\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    console.log(userData);\n\n    try {\n      const response = await userLogin(userData);\n\n      if (!response.ok) {\n        throw new Error(\"Unable to perform request\");\n      }\n\n      const { token, user } = await response.json();\n      console.log(user);\n      Auth.login(token);\n    } catch (err) {\n      console.error(err);\n    }\n\n    setUserData({ username: \"\", password: \"\" });\n  };\n  return (\n    <form>\n      <Center mb=\"6\" fontSize=\"20px\">\n        Welcome Back!\n      </Center>\n      <Stack w=\"500px\" align=\"center\" mx=\"auto\">\n        <Input\n          name=\"username\"\n          value={userData.username}\n          onChange={handleInputChange}\n          placeholder=\"Username\"\n        />\n        <Input\n          name=\"password\"\n          value={userData.password}\n          onChange={handleInputChange}\n          placeholder=\"Password\"\n        />\n        <Button\n          onClick={validate}\n          fontWeight=\"light\"\n          fontSize=\"lg\"\n          align=\"center\"\n          bg=\"#dfb3f2\"\n          _hover={{ bg: \"#f0f8fe\" }}\n        >\n          Come on In!\n        </Button>\n      </Stack>\n    </form>\n  );\n}\n","/Users/madeleineodea/Desktop/final-project/client/src/utils/auth.js",[],"/Users/madeleineodea/Desktop/final-project/client/src/pages/AddRecipe.js",["118"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Center,\n  Stack,\n  Input,\n  FormLabel,\n  Button,\n  Text,\n  Textarea,\n} from \"@chakra-ui/react\";\nimport Auth from \"../utils/auth\";\nimport { addNewRecipe } from \"../utils/API\";\n\nexport default function AddRecipe() {\n  const [formData, addFormData] = useState({\n    name: \"\",\n    description: \"\",\n    prepTime: \"\",\n    cookTime: \"\",\n    img: \"\",\n    ingredients: [\"\"],\n    instructions: [\"\"],\n    user: \"\",\n  });\n\n  const [formError, addFormError] = useState({\n    name: false,\n    description: false,\n    prepTime: false,\n    cookTime: false,\n    ingredients: false,\n    instructions: false,\n    img: false,\n  });\n\n  console.log(formError);\n\n  useEffect(() => {\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n    if (!token) {\n      return false;\n    }\n\n    const userId = Auth.getUserId(token);\n    addFormData({ ...formData, user: userId });\n    console.log(formData);\n  }, []);\n\n  const handleOnChange = (event) => {\n    const { name, value } = event.target;\n    addFormData({ ...formData, [name]: value });\n  };\n\n  const handleOnBlur = (event) => {\n    const { name, value } = event.target;\n    if (!value) {\n      addFormError({ ...formError, [name]: true });\n    } else {\n      const list = { ...formError, [name]: false };\n      addFormError(list);\n      console.log(\"No form error\");\n    }\n  };\n\n  const handleIngredientChange = (event, index) => {\n    const { name, value } = event.target;\n    const list = { ...formData };\n    list[name][index] = value;\n    addFormData(list);\n\n    console.log(formData);\n  };\n\n  const handleInstructionChange = (event, index) => {\n    const { name, value } = event.target;\n    const list = { ...formData };\n    list[name][index] = value;\n    addFormData(list);\n  };\n\n  const onPictureChange = (event) => {\n    const image = URL.createObjectURL(event.target.files[0]);\n    console.log(image);\n    const list = { ...formData, img: event.target.files[0] };\n    addFormData(list);\n  };\n\n  const handleAddClick = (event) => {\n    const buttonId = event.target.id;\n    if (buttonId === \"ingredient\") {\n      addFormData({ ...formData, ingredients: [...formData.ingredients, \"\"] });\n    } else if (buttonId === \"instruction\") {\n      addFormData({\n        ...formData,\n        instructions: [...formData.instructions, \"\"],\n      });\n    }\n  };\n\n  const validate = (event) => {\n    for (const element in formData) {\n      if (formData[element] === \"\") {\n        return;\n      }\n    }\n\n    handleFormSubmit(event);\n  };\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n    if (!token) {\n      return false;\n    }\n\n    const userId = Auth.getUserId(token);\n    console.log(userId);\n    addFormData({ ...formData, user: userId });\n\n    try {\n      console.log(formData);\n      const response = await addNewRecipe(formData, token);\n\n      if (!response.ok) {\n        throw new Error(\"Unable to finish request\");\n      }\n      const newRecipe = await response.json();\n\n      console.log(newRecipe);\n    } catch (err) {\n      console.error(err);\n    }\n\n    console.log(formData);\n    addFormData({\n      name: \"\",\n      description: \"\",\n      prepTime: \"\",\n      cookTime: \"\",\n      ingredients: [\"\"],\n      instructions: [\"\"],\n      img: \"\",\n      user: \"\",\n    });\n\n    addFormError({\n      name: false,\n      description: false,\n      prepTime: false,\n      cookTime: false,\n      ingredients: false,\n      instructions: false,\n      img: false,\n    });\n\n    window.location.assign(\"/dashboard\");\n  };\n\n  return (\n    <>\n      <form encType=\"multipart/form-data\">\n        <Center mb=\"6\" fontSize=\"20px\">\n          What are you cooking for us today?\n        </Center>\n        <Stack w=\"500px\" align=\"center\" mx=\"auto\" mb=\"20\">\n          <FormLabel>Dish Name:</FormLabel>\n          <Input\n            name=\"name\"\n            value={formData.name}\n            onChange={handleOnChange}\n            placeholder=\"Wine Cream Chicken\"\n            onBlur={handleOnBlur}\n          />\n          {formError.name === true && (\n            <Text color=\"#008080\">Please input a name</Text>\n          )}\n\n          <FormLabel>Description:</FormLabel>\n          <Textarea\n            name=\"description\"\n            value={formData.description}\n            onChange={handleOnChange}\n            placeholder=\"Creamy chicken bake covered in breadcrumbs. Perfect for a holiday feast or a cozy night in\"\n            onBlur={handleOnBlur}\n          />\n          {formError.description === true && (\n            <Text color=\"#008080\">Please input a description</Text>\n          )}\n          <FormLabel>Prep Time:</FormLabel>\n          <Input\n            name=\"prepTime\"\n            value={formData.prepTime}\n            onChange={handleOnChange}\n            placeholder=\"20 Mins\"\n            onBlur={handleOnBlur}\n          />\n          {formError.prepTime === true && (\n            <Text color=\"#008080\">Please input a preparation time</Text>\n          )}\n          <FormLabel>Cook Time:</FormLabel>\n          <Input\n            name=\"cookTime\"\n            value={formData.cookTime}\n            onChange={handleOnChange}\n            placeholder=\"1 Hr\"\n            onBlur={handleOnBlur}\n          />\n          {formError.cookTime === true && (\n            <Text color=\"#008080\">Please input a Cook time</Text>\n          )}\n          <FormLabel>Ingredients:</FormLabel>\n          {formData.ingredients.map((ingredient, i) => {\n            return (\n              <Input\n                key={i}\n                name=\"ingredients\"\n                value={ingredient}\n                onChange={(e) => handleIngredientChange(e, i)}\n                placeholder=\"200g Chicken Breast\"\n                onBlur={(e) => handleOnBlur(e)}\n              />\n            );\n          })}\n          {formError.ingredients === true ? (\n            <>\n              <Button id=\"ingredient\" size=\"sm\" bg=\" #D991EE\" align=\"center\">\n                Add Ingredient\n              </Button>\n\n              <Text color=\"#008080\">Please input ingredients</Text>\n            </>\n          ) : (\n            <Button\n              id=\"ingredient\"\n              onClick={handleAddClick}\n              size=\"sm\"\n              bg=\" #D991EE\"\n              align=\"center\"\n            >\n              Add Ingredient\n            </Button>\n          )}\n\n          <FormLabel>Instructions:</FormLabel>\n          {formData.instructions.map((instruction, i) => {\n            return (\n              <Input\n                key={i}\n                name=\"instructions\"\n                value={instruction}\n                onChange={(e) => handleInstructionChange(e, i)}\n                placeholder=\"Preheat Oven to 250 degrees\"\n                onBlur={(e) => handleOnBlur(e)}\n              />\n            );\n          })}\n          {formError.instructions === true ? (\n            <>\n              <Button id=\"instruction\" size=\"sm\" bg=\" #D991EE\" align=\"center\">\n                Add Step\n              </Button>\n\n              <Text color=\"#008080\">Please input instructions</Text>\n            </>\n          ) : (\n            <Button\n              id=\"instruction\"\n              onClick={handleAddClick}\n              size=\"sm\"\n              bg=\" #D991EE\"\n              align=\"center\"\n            >\n              Add Step\n            </Button>\n          )}\n\n          <FormLabel>\n            *Warning* This cannot be changed later, so choose wisely!\n          </FormLabel>\n          <Input\n            name=\"img\"\n            onChange={onPictureChange}\n            type=\"file\"\n            accept=\"img/x-png\"\n          />\n\n          <Button onClick={validate} size=\"md\" bg=\" #D991EE\" align=\"center\">\n            Create Recipe!\n          </Button>\n        </Stack>\n      </form>\n    </>\n  );\n}\n","/Users/madeleineodea/Desktop/final-project/client/src/pages/View.js",["119"],"import React, { useEffect, useState } from \"react\";\n\nimport { getIndividualRecipe, addComment } from \"../utils/API\";\nimport SingleCard from \"../components/SingleCard\";\nimport Auth from \"../utils/auth\";\n\nexport default function View(props) {\n  const [recipes, setRecipes] = useState({\n    name: \"\",\n    description: \"\",\n    prepTime: \"\",\n    cookTime: \"\",\n    ingredients: [\"\"],\n    instructions: [\"\"],\n    img: \"\",\n    user: \"\",\n    comments: [\"\"],\n  });\n\n  const [recipeId, setRecipeId] = useState(\"\");\n\n  const [hasToken, setHasToken] = useState(true);\n  const [comment, setComment] = useState({ comment: \"\", username: \"\" });\n\n  useEffect(() => {\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n    if (!token) {\n      setHasToken(false);\n    }\n    const username = Auth.getUserName(token);\n    console.log(username);\n\n    setComment({ ...comment, username: username });\n\n    const getRecipeData = async () => {\n      const recipeId = props.match.params.id;\n\n      setRecipeId(recipeId);\n      try {\n        const response = await getIndividualRecipe(recipeId);\n\n        if (!response.ok) {\n          throw new Error(\"Something went wrong\");\n        }\n        const recipeData = await response.json();\n        console.log(recipeData);\n\n        setRecipes(recipeData[0]);\n      } catch (err) {\n        console.error(err);\n      }\n    };\n    getRecipeData();\n  }, []);\n\n  const handleOnChange = (event) => {\n    const { value } = event.target;\n    setComment({ ...comment, comment: value });\n  };\n\n  const validate = (event) => {\n    if (comment.comment === \"\") {\n      return;\n    }\n\n    handleFormSubmit(event);\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    console.log(comment);\n\n    try {\n      const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n      if (!token) {\n        return false;\n      }\n\n      const response = await addComment(recipeId, comment, token);\n\n      if (!response.ok) {\n        throw new Error(\"Something went wrong\");\n      }\n      const recipeData = await response.json();\n\n      console.log(recipeData);\n      setRecipes({ ...recipes, comments: recipeData.comments });\n\n      setComment({ comment: \"\", user: \"\" });\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return (\n    <SingleCard\n      key={recipes._id}\n      name={recipes.name}\n      prepTime={recipes.prepTime}\n      cookTime={recipes.cookTime}\n      ingredients={recipes.ingredients}\n      instructions={recipes.instructions}\n      img={recipes.img}\n      description={recipes.description}\n      user={recipes.user}\n      comments={recipes.comments}\n      commentvalue={comment.comment}\n      onChange={handleOnChange}\n      onClick={validate}\n      loggedIn={hasToken}\n    />\n  );\n}\n","/Users/madeleineodea/Desktop/final-project/client/src/components/SingleCard.js",["120","121"],"/Users/madeleineodea/Desktop/final-project/client/src/pages/EditView.js",["122"],"import React, { useState, useEffect } from \"react\";\nimport Auth from \"../utils/auth\";\nimport { editRecipe, getIndividualRecipe } from \"../utils/API\";\nimport Form from \"../components/Form\";\n\nexport default function AddRecipe(props) {\n  const [formData, addFormData] = useState({\n    name: \"\",\n    description: \"\",\n    prepTime: \"\",\n    cookTime: \"\",\n    ingredients: [\"\"],\n    instructions: [\"\"],\n    img: \"\",\n    user: \"\",\n  });\n\n  const [formError, addFormError] = useState({\n    name: false,\n    description: false,\n    prepTime: false,\n    cookTime: false,\n    ingredients: false,\n    instructions: false,\n    img: false,\n  });\n\n  const URLPath = window.location.pathname;\n  console.log(URLPath);\n\n  useEffect(() => {\n    const getRecipeData = async () => {\n      const recipeId = props.match.params.id;\n\n      console.log(recipeId);\n\n      try {\n        const response = await getIndividualRecipe(recipeId);\n\n        if (!response.ok) {\n          throw new Error(\"Something went wrong\");\n        }\n        const recipeData = await response.json();\n        addFormData(recipeData[0]);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    getRecipeData();\n  }, []);\n\n  const handleOnChange = (event) => {\n    const { name, value } = event.target;\n    addFormData({ ...formData, [name]: value });\n  };\n  const handleOnBlur = (event) => {\n    const { name, value } = event.target;\n    if (!value) {\n      addFormError({ ...formError, [name]: true });\n    } else {\n      const list = { ...formError, [name]: false };\n      addFormError(list);\n      console.log(\"No form error\");\n    }\n  };\n\n  const handleIngredientChange = (event, index) => {\n    const { name, value } = event.target;\n    const list = { ...formData };\n    list[name][index] = value;\n    addFormData(list);\n\n    console.log(formData);\n  };\n\n  const handleInstructionChange = (event, index) => {\n    const { name, value } = event.target;\n    const list = { ...formData };\n    list[name][index] = value;\n    addFormData(list);\n\n    console.log(formData);\n  };\n\n  const handleAddClick = (event) => {\n    const buttonId = event.target.id;\n    if (buttonId === \"ingredient\") {\n      addFormData({ ...formData, ingredients: [...formData.ingredients, \"\"] });\n    } else if (buttonId === \"instruction\") {\n      addFormData({\n        ...formData,\n        instructions: [...formData.instructions, \"\"],\n      });\n    }\n  };\n\n  const validate = (event) => {\n    for (const element in formData) {\n      if (formData[element] === \"\") {\n        return;\n      }\n    }\n\n    handleFormSubmit(event);\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n    try {\n      console.log(formData);\n      const response = await editRecipe(formData, token);\n\n      if (!response.ok) {\n        throw new Error(\"Unable to finish request\");\n      }\n      const newRecipe = await response.json();\n\n      console.log(newRecipe);\n    } catch (err) {\n      console.error(err);\n    }\n\n    addFormData({\n      name: \"\",\n      description: \"\",\n      prepTime: \"\",\n      cookTime: \"\",\n      ingredients: [\"\"],\n      instructions: [\"\"],\n      img: \"\",\n      user: \"\",\n    });\n\n    addFormData({\n      name: \"\",\n      description: \"\",\n      prepTime: \"\",\n      cookTime: \"\",\n      ingredients: [\"\"],\n      instructions: [\"\"],\n      img: \"\",\n      user: \"\",\n    });\n    console.log(\"Function still running\");\n\n    window.location.assign(\"/dashboard\");\n  };\n\n  return (\n    <>\n      <Form\n        formData={formData}\n        handleOnChange={handleOnChange}\n        handleOnBlur={handleOnBlur}\n        formError={formError}\n        handleIngredientChange={handleIngredientChange}\n        handleAddClick={handleAddClick}\n        handleInstructionChange={handleInstructionChange}\n        validate={validate}\n      />\n    </>\n  );\n}\n","/Users/madeleineodea/Desktop/final-project/client/src/pages/Favourites.js",[],"/Users/madeleineodea/Desktop/final-project/client/src/pages/FavouritesEdit.js",["123"],"import React, { useState, useEffect } from \"react\";\nimport Auth from \"../utils/auth\";\nimport { editFavourites, getFavourites } from \"../utils/API\";\nimport Form from \"../components/Form\";\n\nexport default function FavouritesEdit(props) {\n  const [formData, addFormData] = useState({\n    name: \"\",\n    description: \"\",\n    prepTime: \"\",\n    cookTime: \"\",\n    ingredients: [\"\"],\n    instructions: [\"\"],\n    user: \"\",\n  });\n  const [user, setUser] = useState();\n\n  const [formError, addFormError] = useState({\n    name: false,\n    description: false,\n    prepTime: false,\n    cookTime: false,\n    ingredients: false,\n    instructions: false,\n    img: false,\n  });\n\n  console.log(formError);\n  console.log(formData);\n\n  useEffect(() => {\n    const getRecipeData = async () => {\n      const recipeIndex = props.match.params.id;\n\n      try {\n        const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n        if (!token) {\n          return false;\n        }\n        const user = Auth.getUserId(token);\n        setUser(user);\n\n        const response = await getFavourites(user, token);\n\n        if (!response.ok) {\n          throw new Error(\"Something went wrong\");\n        }\n        const favouritesData = await response.json();\n\n        console.log(favouritesData);\n\n        const chosenRecipe = favouritesData[0].favourites[recipeIndex - 1];\n        addFormData(chosenRecipe);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    getRecipeData();\n  }, []);\n\n  const handleOnChange = (event) => {\n    const { name, value } = event.target;\n    addFormData({ ...formData, [name]: value });\n  };\n\n  const handleOnBlur = (event) => {\n    const { name, value } = event.target;\n    if (!value) {\n      addFormError({ ...formError, [name]: true });\n    } else {\n      const list = { ...formError, [name]: false };\n      addFormError(list);\n      console.log(\"No form error\");\n    }\n  };\n\n  const handleIngredientChange = (event, index) => {\n    const { name, value } = event.target;\n    const list = { ...formData };\n    list[name][index] = value;\n    addFormData(list);\n\n    console.log(formData);\n  };\n\n  const handleInstructionChange = (event, index) => {\n    const { name, value } = event.target;\n    const list = { ...formData };\n    list[name][index] = value;\n    addFormData(list);\n\n    console.log(formData);\n  };\n\n  const handleAddClick = (event) => {\n    const buttonId = event.target.id;\n    if (buttonId === \"ingredient\") {\n      addFormData({ ...formData, ingredients: [...formData.ingredients, \"\"] });\n    } else if (buttonId === \"instruction\") {\n      addFormData({\n        ...formData,\n        instructions: [...formData.instructions, \"\"],\n      });\n    }\n  };\n  const validate = (event) => {\n    for (const element in formData) {\n      if (formData[element] === \"\") {\n        return;\n      }\n    }\n\n    handleFormSubmit(event);\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n    try {\n      console.log(formData);\n\n      console.log(user);\n      const response = await editFavourites(formData, user, token);\n\n      if (!response.ok) {\n        throw new Error(\"Unable to finish request\");\n      }\n      const newRecipe = await response.json();\n\n      console.log(newRecipe);\n    } catch (err) {\n      console.error(err);\n    }\n\n    addFormData({\n      name: \"\",\n      description: \"\",\n      prepTime: \"\",\n      cookTime: \"\",\n      ingredients: [\"\"],\n      instructions: [\"\"],\n      img: \"\",\n      user: \"\",\n    });\n\n    addFormError({\n      name: false,\n      description: false,\n      prepTime: false,\n      cookTime: false,\n      ingredients: false,\n      instructions: false,\n      img: false,\n    });\n\n    window.location.assign(\"/favs\");\n  };\n\n  return (\n    <>\n      <Form\n        formData={formData}\n        handleOnChange={handleOnChange}\n        handleOnBlur={handleOnBlur}\n        formError={formError}\n        handleIngredientChange={handleIngredientChange}\n        handleAddClick={handleAddClick}\n        handleInstructionChange={handleInstructionChange}\n        validate={validate}\n      />\n    </>\n  );\n}\n","/Users/madeleineodea/Desktop/final-project/client/src/components/Form.js",[],{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","severity":1,"message":"129","line":32,"column":6,"nodeType":"130","endLine":32,"endColumn":8,"suggestions":"131"},{"ruleId":"132","severity":1,"message":"133","line":77,"column":15,"nodeType":"134","messageId":"135","endLine":77,"endColumn":37},{"ruleId":"132","severity":1,"message":"133","line":78,"column":15,"nodeType":"134","messageId":"135","endLine":78,"endColumn":29},{"ruleId":"132","severity":1,"message":"133","line":92,"column":15,"nodeType":"134","messageId":"135","endLine":92,"endColumn":42},{"ruleId":"132","severity":1,"message":"133","line":93,"column":15,"nodeType":"134","messageId":"135","endLine":93,"endColumn":31},{"ruleId":"132","severity":1,"message":"133","line":108,"column":15,"nodeType":"134","messageId":"135","endLine":108,"endColumn":39},{"ruleId":"132","severity":1,"message":"133","line":109,"column":15,"nodeType":"134","messageId":"135","endLine":109,"endColumn":29},{"ruleId":"128","severity":1,"message":"136","line":42,"column":6,"nodeType":"130","endLine":42,"endColumn":8,"suggestions":"137"},{"ruleId":"124","replacedBy":"138"},{"ruleId":"126","replacedBy":"139"},{"ruleId":"140","severity":1,"message":"141","line":2,"column":40,"nodeType":"142","messageId":"143","endLine":2,"endColumn":44},{"ruleId":"140","severity":1,"message":"144","line":18,"column":9,"nodeType":"142","messageId":"143","endLine":18,"endColumn":21},{"ruleId":"128","severity":1,"message":"145","line":48,"column":6,"nodeType":"130","endLine":48,"endColumn":8,"suggestions":"146"},{"ruleId":"128","severity":1,"message":"147","line":54,"column":6,"nodeType":"130","endLine":54,"endColumn":8,"suggestions":"148"},{"ruleId":"140","severity":1,"message":"149","line":1,"column":17,"nodeType":"142","messageId":"143","endLine":1,"endColumn":25},{"ruleId":"140","severity":1,"message":"150","line":1,"column":27,"nodeType":"142","messageId":"143","endLine":1,"endColumn":36},{"ruleId":"128","severity":1,"message":"151","line":50,"column":6,"nodeType":"130","endLine":50,"endColumn":8,"suggestions":"152"},{"ruleId":"128","severity":1,"message":"151","line":60,"column":6,"nodeType":"130","endLine":60,"endColumn":8,"suggestions":"153"},"no-native-reassign",["154"],"no-negated-in-lhs",["155"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'recipes'. Either include it or remove the dependency array.","ArrayExpression",["156"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.",["157"],["154"],["155"],"no-unused-vars","'Text' is defined but never used.","Identifier","unusedVar","'handleOnBlur' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'formData'. Either include it or remove the dependency array. You can also do a functional update 'addFormData(f => ...)' if you only need 'formData' in the 'addFormData' call.",["158"],"React Hook useEffect has missing dependencies: 'comment' and 'props.match.params.id'. Either include them or remove the dependency array. You can also do a functional update 'setComment(c => ...)' if you only need 'comment' in the 'setComment' call.",["159"],"'useState' is defined but never used.","'useEffect' is defined but never used.","React Hook useEffect has a missing dependency: 'props.match.params.id'. Either include it or remove the dependency array.",["160"],["161"],"no-global-assign","no-unsafe-negation",{"desc":"162","fix":"163"},{"desc":"164","fix":"165"},{"desc":"166","fix":"167"},{"desc":"168","fix":"169"},{"desc":"170","fix":"171"},{"desc":"170","fix":"172"},"Update the dependencies array to be: [recipes]",{"range":"173","text":"174"},"Update the dependencies array to be: [user]",{"range":"175","text":"176"},"Update the dependencies array to be: [formData]",{"range":"177","text":"178"},"Update the dependencies array to be: [comment, props.match.params.id]",{"range":"179","text":"180"},"Update the dependencies array to be: [props.match.params.id]",{"range":"181","text":"182"},{"range":"183","text":"182"},[786,788],"[recipes]",[1142,1144],"[user]",[951,953],"[formData]",[1376,1378],"[comment, props.match.params.id]",[1177,1179],"[props.match.params.id]",[1465,1467]]